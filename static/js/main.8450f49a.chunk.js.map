{"version":3,"sources":["components/HeaderButton/HeaderButton.module.css","components/App/App.module.css","redux/slices/fontSlices.js","redux/store/createStore.js","helpers/helpers.js","components/ContentComponent/ContentComponent.js","constants/constants.js","redux/selectors/fontSelectors.js","components/HeaderButton/SelectFontBackground/SelectFontBackground.js","components/HeaderButton/SelectFontColor/SelectFontColor.js","components/HeaderButton/SelectFontSize/SelectFontSize.js","components/HeaderButton/HeaderButton.js","components/App/App.js","index.js"],"names":["module","exports","fontSlice","createSlice","name","initialState","fontColor","fontSize","fontBackground","reducers","changeFontColor","state","action","payload","changeFontSize","changeFontBackground","actions","reducer","font","store","configureStore","changeFont","property","value","range","sel","window","getSelection","rangeCount","getRangeAt","document","designMode","removeAllRanges","addRange","execCommand","ContentComponent","ref","useRef","className","contentEditable","onClick","combine","array","childrensArray","key","hasOwnProperty","push","map","children","text","innerText","size","background","style","backgroundColor","color","reduce","acc","cur","found","i","length","combineItems","current","console","log","JSON","stringify","colors","id","getFontColor","createSelector","getFontBackground","getFontSize","SelectFontBackground","useSelector","dispatch","useDispatch","onChange","e","target","SelectFontColor","SelectFontSize","HeaderButton","styled","wrapper","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8450f49a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HeaderButton_wrapper__1Le_W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3ox-V\"};","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    fontColor: 'black',\n    fontSize: '4',\n    fontBackground: 'white',\n}\n\nconst fontSlice = createSlice({\n    name: 'font',\n    initialState,\n    reducers: {\n        changeFontColor: (state, action) =>\n            void (state.fontColor = action.payload),\n        changeFontSize: (state, action) =>\n            void (state.fontSize = action.payload),\n        changeFontBackground: (state, action) =>\n            void (state.fontBackground = action.payload),\n    },\n})\n\nexport const {\n    changeFontColor,\n    changeFontSize,\n    changeFontBackground,\n} = fontSlice.actions\n\nexport default fontSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport font from '../slices/fontSlices'\n\nconst reducer = {\n    font,\n}\n\nexport const store = configureStore({\n    reducer,\n})\n","export const changeFont = (property, value) => {\n    const sel = window.getSelection()\n    let range\n\n    if (sel.rangeCount && sel.getRangeAt) {\n        range = sel.getRangeAt(0)\n    }\n    document.designMode = 'on'\n\n    if (range) {\n        sel.removeAllRanges()\n        sel.addRange(range)\n    }\n\n    document.execCommand(property, false, value)\n\n    document.designMode = 'off'\n}\n\nexport const combineItems = array => {\n    const childrensArray = []\n\n    for (let key in array) {\n        if (array.hasOwnProperty(key)) {\n            childrensArray.push(array[key])\n        }\n    }\n\n    const arrayWithOptions = childrensArray.map(children => {\n        return {\n            text: children.innerText,\n            size: children.size,\n            background: children.style.backgroundColor,\n            color: children.color,\n        }\n    })\n\n    const combineArray = arrayWithOptions.reduce((acc, cur) => {\n        let found = false\n\n        for (let i = 0; i < acc.length; i++) {\n            if (\n                acc[i].size === cur.size &&\n                acc[i].color === cur.color &&\n                acc[i].background === cur.background\n            ) {\n                found = true\n                acc[i].text = `${acc[i].text} ${cur.text}`\n            }\n        }\n\n        if (!found) {\n            acc.push(cur)\n        }\n\n        return acc\n    }, [])\n\n    return combineArray\n}\n","import React, { useRef } from 'react'\n\nimport { combineItems } from '../../helpers/helpers'\n\nimport './ContentComponent.css'\n\nconst ContentComponent = () => {\n    const ref = useRef(null)\n\n    const handleJSON = () => {\n        const childrens = ref.current.children\n\n        const combine = combineItems(childrens)\n\n        console.log(JSON.stringify(combine))\n    }\n\n    return (\n        <>\n            <div ref={ref} className=\"wrapper\" contentEditable=\"true\" />\n            <button onClick={handleJSON} className=\"btn\">\n                To JSON\n            </button>\n        </>\n    )\n}\n\nexport default ContentComponent\n","export const colors = [\n    {\n        id: 1,\n        value: 'black',\n        name: 'Чорний',\n    },\n    {\n        id: 2,\n        value: 'red',\n        name: 'Червоний',\n    },\n    {\n        id: 3,\n        value: 'blue',\n        name: 'Синiй',\n    },\n    {\n        id: 4,\n        value: 'green',\n        name: 'Зелений',\n    },\n    {\n        id: 5,\n        value: 'white',\n        name: 'Білий',\n    },\n]\n","import { createSelector } from '@reduxjs/toolkit'\n\nexport const getFontColor = createSelector(\n    state => state.font.fontColor,\n    color => color\n)\n\nexport const getFontBackground = createSelector(\n    state => state.font.fontBackground,\n    background => background\n)\n\nexport const getFontSize = createSelector(\n    state => state.font.fontSize,\n    size => size\n)\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { colors } from '../../../constants/constants'\n\nimport { changeFont } from '../../../helpers/helpers'\nimport { getFontBackground } from '../../../redux/selectors/fontSelectors'\nimport { changeFontBackground } from '../../../redux/slices/fontSlices'\n\nconst SelectFontBackground = () => {\n    const fontBackground = useSelector(getFontBackground)\n\n    const dispatch = useDispatch()\n\n    const onClickChange = () => changeFont('backColor', fontBackground)\n\n    const onChange = e => {\n        dispatch(changeFontBackground(e.target.value))\n    }\n\n    return (\n        <p>\n            Виберіть фон шрифта:\n            <select onChange={onChange} value={fontBackground}>\n                {colors.map(color => (\n                    <option key={color.id} value={color.value}>\n                        {color.name}\n                    </option>\n                ))}\n            </select>\n            <button onClick={onClickChange}>Change</button>\n        </p>\n    )\n}\n\nexport default SelectFontBackground\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { changeFont } from '../../../helpers/helpers'\nimport { getFontColor } from '../../../redux/selectors/fontSelectors'\nimport { changeFontColor } from '../../../redux/slices/fontSlices'\nimport { colors } from '../../../constants/constants'\n\nconst SelectFontColor = () => {\n    const fontColor = useSelector(getFontColor)\n\n    const dispatch = useDispatch()\n    \n    const onClickChange = () => changeFont('foreColor', fontColor)\n\n    const onChange = e => {\n        dispatch(changeFontColor(e.target.value))\n    }\n\n    return (\n        <p>\n            Виберіть колiр шрифта:\n            <select onChange={onChange} value={fontColor}>\n                {colors.map(color => (\n                    <option key={color.id} value={color.value}>\n                        {color.name}\n                    </option>\n                ))}\n            </select>\n            <button onClick={onClickChange}>Change</button>\n        </p>\n    )\n}\n\nexport default SelectFontColor\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { changeFont } from '../../../helpers/helpers'\nimport { getFontSize } from '../../../redux/selectors/fontSelectors'\nimport { changeFontSize } from '../../../redux/slices/fontSlices'\n\nimport './SelectFontSize.css'\n\nconst SelectFontSize = () => {\n    const fontSize = useSelector(getFontSize)\n\n    const dispatch = useDispatch()\n\n    const onClickChange = () => changeFont('fontSize', fontSize)\n\n    const onChange = e => {\n        dispatch(changeFontSize(e.target.value))\n    }\n\n    return (\n        <p>\n            Виберіть розмір шрифта:\n            <select onChange={onChange} value={fontSize}>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"4\">3</option>\n                <option value=\"5\">4</option>\n                <option value=\"6\">5</option>\n                <option value=\"7\">6</option>\n            </select>\n            <button onClick={onClickChange}>Change</button>\n        </p>\n    )\n}\n\nexport default SelectFontSize\n","import React from 'react'\n\nimport styled from './HeaderButton.module.css'\nimport SelectFontBackground from './SelectFontBackground/SelectFontBackground'\nimport SelectFontColor from './SelectFontColor/SelectFontColor'\nimport SelectFontSize from './SelectFontSize/SelectFontSize'\n\nconst HeaderButton = () => {\n    return (\n        <div className={styled.wrapper}>\n            <SelectFontSize />\n            <SelectFontColor />\n            <SelectFontBackground />\n        </div>\n    )\n}\n\nexport default HeaderButton\n","import React from 'react'\n\nimport ContentComponent from '../ContentComponent/ContentComponent'\nimport HeaderButton from '../HeaderButton/HeaderButton'\n\nimport styled from './App.module.css'\n\nconst App = () => {\n    return (\n        <div className={styled.wrapper}>\n            <HeaderButton />\n            <ContentComponent />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store/createStore'\n\nimport App from './components/App/App'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}